@using BlogProject.Services
@using BlogProject.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@inject IImageService imageService

@model IPagedList<Post>


<div class="row">
    @if (User.IsInRole("Administrator") || User.IsInRole("Moderator"))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>

    }

    <table class="table">
        <thead>
            <tr>
                <th>
                    Image
                </th>

                <th>
                    Title
                </th>
                <th>
                    Abstract
                </th>


                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img class="img-fluid" width="200px" src="@imageService.DecodeImage(item.ImageData, item.ContentType)" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Abstract)
                    </td>


                    <td>
                        @if (User.IsInRole("Administrator") || User.IsInRole("Moderator"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>

                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                        }

                        <a asp-action="Details" asp-route-slug="@item.Slug">Details</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



<hr />
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new {id = Model.FirstOrDefault().BlogId, page = page}),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[]{"page-item"},
        PageClasses = new string[]{"page-link"}
        })
    </div>
</div>
