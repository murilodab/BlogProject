@using BlogProject.Services
@using BlogProject.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@inject IImageService ImageService

@model IPagedList<BlogProject.Models.Post>

@if (Model.PageNumber <= 1)
{
    <h3>Recent Posts</h3>

    <hr/>
}


<div id="blogContainer" class="row row-cols-1 row-cols-md-3 g-4">

    @foreach (var post in Model)
    {
        <div class="col">
            <div class="card h-100" style="min-height: 30vh">
                <img class="card-img-top img-fluid" id="cardImg" src="@ImageService.DecodeImage(post.ImageData, post.ContentType)">
                <div class="card-body text-left">
                    <div class="card-text">
                        <small class="text-muted">@post.Created.ToString("MMM dd, yyyy") | <a>@post.BlogUser.FullName</a></small>
                        <div class=" mt-3 mb-3">
                            <a asp-controller="Posts" asp-action="Details" asp-route-slug="@post.Slug">
                                <h2 class=" mt-1 card-title">
                                    @post.Title
                                </h2>
                            </a>                         
                        </div>                
                    </div>

                    
                    
                    @if(User.IsInRole("Administrator") || User.IsInRole("Moderator"))
                    {
                        <div class=" row text-center">
                            <div class="col">
                            <a class="btn btn-warning btn-sm w-100" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">
                                Edit Post</a>
                                </div>
                                <div class="col">
                                <a class="btn btn-danger btn-sm w-100" asp-action="Delete" asp-controller="Posts" asp-route-id="@post.Id">
                                    Delete Post
                                </a>
                                    </div>
                            
                        </div>
                    }

                </div>              
            </div>
        </div>
    }


</div>

<!-- Pager-->
@if (Model.PageCount > 1 && Model.PageNumber <= 1)
{
    <div class="row">

        <div class="col d-flex justify-content-end mb-2 mt-2">
            <a class="btn btn-md btn-primary text-uppercase" href="/?page=2">View More</a>

        </div>
    </div>
}

<!-- Add Pagin Controls Here-->
@if (Model.PageNumber > 1)
{
    <div class="row">
        <div class="d-flex col h4 justify-content-center mt-3">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <div class="row">
        <div class="d-flex justify-content-center col">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page}),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[]{"page-item"},
        PageClasses = new string[] {"page-link"}
        })
        </div>
    </div>

}

